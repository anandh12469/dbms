ALL ERRORS ARE CLEARED EXPECTED Excercise -30 (logical Error)

Excercise -23

select PRODID,PDESC,CATEGORY from Product where lower(CATEGORY) = 'electronics'

eXCERCISE -24

select PRODID,SUBSTR(PDESC,1,5) as PDESC_FIVE,CATEGORY from Product

Excercise-25

SELECT COUNT(*) as SALE_COUNT FROM SALE WHERE SYSDATE-SLDATE<1800

Excercise -26

select nvl(PDESC,'No Description') as PDESC,DISCOUNT from Product

Excercise -27

SELECT PRODID,CATEGORY,PRICE,DISCOUNT FROM Product ORDER BY CATEGORY DESC,PRICE ASC

Excercise -28

SELECT PRODID,CATEGORY,DISCOUNT FROM PRODUCT WHERE CATEGORY='Sports' OR CATEGORY='Apparel' ORDER BY CATEGORY ASC,DISCOUNT

Excercise -29

select to_char(SLDATE,'Month') MONTH,count(SLDATE) NUMBER_SALE from Sale group by to_char(SLDATE,'Month') order by count(SLDATE) desc

Excercise -30 (logical Error)

select distinct prodid,(select sum(quantity) from Saledetail where prodid in 102) qty_sold from Saledetail where prodid in 102

or

select distinct prodid,sum(quantity)  qty_sold from Saledetail where prodid in 102 group by prodid having sum(quantity) >1

or

select distinct prodid,sum(quantity)  qty_sold from Saledetail where prodid in 102 group by prodid 

or 

select prodid,sum(quantity)  qty_sold from Saledetail where prodid in 102 group by prodid having sum(quantity) > 1

or

select prodid,sum(quantity)  qty_sold from Saledetail group by prodid having sum(quantity) > (select max(quantity) from saledetail)


Assignment -40

select itemtype,
case
when price>0 and price<500 then 'Cheap'
when price>499 and price<2000 then 'Affordable'
when price>1999 and price<5000 then 'Expensive'
when price>4999 then 'Very Expensive'
end as classification

from item 

group by itemtype,
case
when price>0 and price<500 then 'Cheap'
when price>499 and price<2000 then 'Affordable'
when price>1999 and price<5000 then 'Expensive'
when price>4999 then 'Very Expensive'
end 

order by itemtype,
case
when price>0 and price<500 then 'Cheap'
when price>499 and price<2000 then 'Affordable'
when price>1999 and price<5000 then 'Expensive'
when price>4999 then 'Very Expensive'
end

Assignment -41
    
select to_char(qdate,'Month') month,count(*) quotationcount
from quotation
group by to_char(qdate,'Month') 
order by to_char(qdate,'Month')

Assignment -42

select orderid,round((pymtdate-orderdate-0.4)/30,2) "No of Months" 
from orders
where round((pymtdate-orderdate-0.4)/30,2)>0.1

Assignment -43

select empid,salary as "Current Salary",salary+salary*0.2 as "New Salary",salary*0.2 as "Incremented Amount" from empdetails where designation in 'Manager'


Assignment -44

select itemcode from item where abs(qtyonhand-reorderlevel) > 50

Excercise - 31

select prodid,pdesc,price "Old_Price",round(price*.775,2)"New_Price" from product where category='Sports'

Excercise -32

select saleid,abs(round(months_between(SLDATE ,sysdate),1)) as month_aged from Sale 

Excercise -33

select round(avg(price),2) as "Avg",min(price) as "Min",max(price) as "Max",count(prodid) as "Total" from Product

Excercise -34

select concat(SNAME,concat(' is from ',LOCATION)) as RESULT from Salesman

Excercise -35

select to_char(to_date('Jan/10/2015','mm/dd/yyyy'),'Month') as "MONTH",'250000' as "AMOUNT" from dual

Excercise -36

select PRODID,PDESC,PRICE from Product order by price desc , PRODID desc

Excercise -37

select prodid,pdesc,price from Product order by pdesc asc

Excercise -38

select location,count(location) as NUMBER_SMAN from Salesman group by Location

Excercise -39

select max(category) as category from Product group by category having count(category) > 1 

Assignment -45

select itemcode,avg(qtyavailable) as "Average Quantity" from RetailStock  group by itemcode having avg(qtyavailable) < 75

Assignment -46

select PymtMode,count(PymtDate) as pymtcount from Orders where PymtDate < '01-Jan-2015' group by pymtmode having count(PymtMode) > 1

Assignment -47

select sname,avg(quotedprice) as "Average quoted price" from quotation where qstatus in 'Closed' group by sname having avg(quotedprice) > 500

Assignment -48

select itemtype,category,round(avg(price),2) as "Average item price" from item where itemtype in 'Computer' or itemtype in 'FMCG' group by category,itemtype having avg(price) < 2000

Assignment -49

select job,avg(sal) as "Average Salary" from emp where job in 'MANAGER' or job in 'ANALYST' GROUP BY job

Assignment -50

select job,deptno,avg(sal) as "AVGSALARY" from emp where sal > 2000 and deptno <=20 group by job,deptno having avg(sal) > 2500

Assignment -51

select empid,empname,salary,
case
    when designation = 'Administrator' then salary*1.1
    when designation = 'Manager' then salary*1.05
    when designation = 'Billing Staff' then salary*1.2
    when designation = 'Security' then salary*1.25  
    else  salary*1.02
end  "INCREASEDSALARY" 
from empdetails

Assignment -52

select empid,salary,
case 
when salary<2500 then 'Class 3'
when salary between 2500 and 5000 then 'Class 2'
else 'Class 1'
end salgrade
from empdetails

Assignment-53

select itemcode,price "Old Price",round(price*0.745,2) "New Price" 
from item 
where itemtype ='FMCG'

Assignemt -54

select empid,empname,worksin
from empdetails
where designation='Billing Staff'

Assignment -55

select orderid,status,nvl(pymtmode,'Payment yet not done') pymtmode
from orders

aSSIGNMENT -56

select descr from item where LENGTH(descr) > 15

Assignment -57

SELECT regexp_replace(roid,'[^0-9]') numericroid FROM RETAILOUTLET

Assignment -58

SELECT TO_CHAR(SYSDATE, 'Mon/DD/YYYY Day' ) currentdate FROM dual;

Assognment -59

select count(qtyordered) TOTALORDERSCOUNT,count(amountpaid) PAIDORDERSCOUNT from orders

Assignment -60

select orderid,to_date(pymtdate)-to_date(orderdate) noofdays from orders

Assignment -61

select count(count(itemtype)) noofitemtypes from item group by itemtype

Assignment -62

select max(salary) maxsal,min(salary) minsal,sum(salary) totalsal,avg(salary) avgsal from empdetails

Assignment -63

select  sname,avg(quotedprice) as "Average quoted price" from quotation where quotedprice > 1000 and qstatus in 'Closed' group by sname having avg(quotedprice) < 4500

Assignment -64

select count(qtyonhand) noofitems from item

Assignment -65

select orderid,months_between(orderdate,pymtdate) as"No of Months" from orders

Assignment -66

select sum(quotedprice) as totalprice from quotation where qstatus in 'Accepted' group by to_char(quotation.qdate,'MM') having to_char(quotation.qdate,'MM')  = 06 
